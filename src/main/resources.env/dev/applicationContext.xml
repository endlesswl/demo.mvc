<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 	
 	<!--将多个配置文件读取到容器中，交给Spring管理-->
<!--  	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!--         <property name="ignoreResourceNotFound" value="true"/> -->
<!--         <property name="locations"> -->
<!--             <list> -->
<!--                 <value>classpath*:/application.properties</value> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->

	<!-- 此处对于定时时间的配置会被注解中的时间配置覆盖，因此，以注解配置为准   
    <task:scheduled-tasks scheduler="myScheduler">
    </task:scheduled-tasks>
    <task:scheduler id="myScheduler" pool-size="10"/>
 -->
 
 	<!-- 出票成功推送监听器    -->
	<bean id="notifyOrderListener" class="com.palm.lingcai.service.task.NotifyOrderListener" destroy-method="destroy" lazy-init="false">
        <property name="isClosed" value="false"></property>
        <property name="idleTime" value="5"></property>
    </bean>	
 
    
    <context:property-placeholder location="classpath:application.properties" />
    <!-- 导入ehcache缓存配置 -->
	<import resource="ehcache/applicationContext-ehcache.xml" /> 
	<import resource="memcache/applicationContext-memcache.xml" /> 
	<import resource="redis/applicationContext-redis.xml" /> 
 	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired、@Value的属性被注入 -->
 	<context:annotation-config/>  
 	<!-- 自动扫描的基础包 -->
 	<context:component-scan base-package="com.palm.lingcai" />
 	
    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- Connection Pooling Info -->
            <property name="maxActive" value="${jdbc.pool.maxActive}"/>
            <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
            <property name="defaultAutoCommit" value="false"/>
            <!-- 连接Idle一个小时后超时 -->
            <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
            <property name="minEvictableIdleTimeMillis" value="3600000"/>
    </bean>
    
    
    <bean id="spyMemcachedClient"
          class="org.springside.modules.cache.memcached.SpyMemcachedClient">
        <property name="memcachedClient">
            <bean class="net.spy.memcached.spring.MemcachedClientFactoryBean">
                <property name="servers" value="${memcached.url}"/>
                <!-- 默认是TEXT -->
                <property name="protocol" value="TEXT"/>
                <!-- 默认是ARRAY_MOD -->
                <property name="locatorType" value="CONSISTENT"/>
                <!-- 默认是2500毫秒 -->
                <property name="opTimeout" value="1000"/>
            </bean>
        </property>
        <property name="updateTimeout" value="1000"/>
        <property name="shutdownTimeout" value="1000"/>
    </bean>
    
     <!-- Memcached客户端 -->
    <bean id="memcachedClient"
          class="org.springside.modules.cache.memcached.SpyMemcachedClient">
        <property name="memcachedClient">
            <bean class="net.spy.memcached.spring.MemcachedClientFactoryBean">
                <property name="servers" value="${memcached.url}"/>
                <!-- 默认是TEXT -->
                <property name="protocol" value="TEXT"/>
                <!-- 默认是ARRAY_MOD -->
                <property name="locatorType" value="CONSISTENT"/>
                <!-- 默认是2500毫秒 -->
                <property name="opTimeout" value="1000"/>
            </bean>
        </property>
        <property name="updateTimeout" value="1000"/>
        <property name="shutdownTimeout" value="1000"/>
    </bean>
    
    <!-- 配置MyBatis分页： -->
    <bean id="pagePlugin"
          class="com.palm.commom.plugin.paginator.mybatis.MybatisPaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialectClass">com.palm.commom.plugin.paginator.mybatis.jdbc.dialet.MySQLDialect</prop>
            </props>
        </property>
    </bean>
    
	<!-- 配置MyBatis组件：SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录，省掉Mapper.xml手工配置 -->
        <property name="typeAliasesPackage" value="com.palm.lingcai"/>
        <!-- 分页插件装载 -->
        <property name="plugins">
            <array>
                <ref bean="pagePlugin"/>
            </array>
        </property>
        <!-- 指定Mapper.xml文件位置 -->
		<property name="mapperLocations" value="classpath*:mybatis/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
    <!-- 扫描basePackage下所有以@Repository标识的 接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.palm.lingcai" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <!-- Spring 事务配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
	<!-- 使用annotation定义事务 -->
    <tx:annotation-driven  transaction-manager="transactionManager"  proxy-target-class="true"/>
    
    <!-- JSR303 Validator定义 -->
    <bean id="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
</beans>

